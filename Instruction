
Размещение репозитория: https://github.com/Arthur000001/sf_site

Процесс изменений в основнуб кодовую базу:
    Получение последней версии основной кодовой базы:
        Перед тем как начать работу, убедитесь, что вы работаете с последней версией основной кодовой базы. Выполните   команду git pull или git fetch с последующим git merge, чтобы получить все последние изменения из удаленного репозитория в вашу локальную копию.
    Создание отдельной ветки для работы:
        Создайте отдельную ветку для своей работы. Например: git checkout -b feature-branch
        Где feature-branch - имя вашей ветки, которая будет содержать изменения, связанные с определенной функцией, исправлением или задачей.
    Внесение и тестирование изменений:
        Внесите необходимые изменения в код. Убедитесь, что новый код работает корректно и не нарушает существующую функциональность. Запустите тесты, если они есть, чтобы убедиться, что изменения не вызывают проблем.
    Добавление изменений в индекс:
        После завершения работы над изменениями, добавьте их в индекс Git с помощью команды git add.
    Коммит изменений:
        Зафиксируйте свои изменения в локальном репозитории с помощью команды git commit. Обеспечьте информативное описание коммита, чтобы другие члены команды могли легко понять суть изменений.
    Обновление основной кодовой базы:
        Перед отправкой ваших изменений на проверку, убедитесь, что ваша локальная ветка обновлена с последними изменениями основной кодовой базы. Выполните git pull или git fetch с последующим git merge, если необходимо.
    Публикация изменений на сервере:
        Отправьте вашу ветку на сервер для общего доступа и рецензирования с помощью команды git push. Например: git push origin feature-branch
    Создание запроса на включение (Pull Request):
        Создайте запрос на включение (Pull Request), чтобы ваш код был рассмотрен и включен в основную кодовую базу.
    Рецензирование и слияние изменений:
        После создания запроса на включение, другие члены команды могут просмотреть ваш код, оставить комментарии и внести необходимые исправления. После завершения рецензии и устранения всех замечаний ваш код будет принят и слит с основной кодовой базой.
    Удаление ненужных веток:
        После того как ваши изменения были успешно включены в основную кодовую базу, удалите вашу временную ветку командой git branch -d feature-branch (если вы уже завершили работу) или git branch -D feature-branch (если ветка еще не была слияна, и вы хотите ее удалить принудительно).

Правила именования веток:
    Описательность: Имя ветки должно ясно описывать ее содержание или цель. Это поможет другим членам команды быстро понять, что представляют собой изменения в ветке.
    Префиксы: Использование префиксов может помочь лучше организовать ветки в репозитории и облегчить их идентификацию.     Например, можно использовать префиксы, указывающие на тип ветки, такие как feature/ для новых функций, bugfix/ для исправлений ошибок, hotfix/ для срочных исправлений и т. д.
    Краткость и читаемость: Имя ветки должно быть кратким, но информативным. Избегайте слишком длинных имен, но при этом убедитесь, что они достаточно описательные для понимания содержания ветки.
    Примеры правильного именования веток:
        feature/login-page - ветка для разработки новой страницы входа
        bugfix/issue123 - ветка для исправления ошибки, связанной с проблемой №123
        hotfix/security-fix - ветка для быстрого исправления уязвимости без ожидания следующего релиза
